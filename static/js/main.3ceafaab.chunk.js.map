{"version":3,"sources":["components/Forms/Form.module.css","components/Contacts/ContactList.module.css","components/Filter/Filter.module.css","components/Forms/Form.js","components/Contacts/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","addNewContact","useState","userName","setName","userNumber","setNumber","prodIdName","uuidv4","prodIdNumber","handleChange","event","target","name","value","reset","className","s","form","onSubmit","preventDefault","label","htmlFor","input","id","type","pattern","title","required","onChange","button","ContactList","removeContact","contacts","list","map","number","list__item","onClick","Filter","changeFilter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","newContacts","find","contact","alert","prevContacts","e","currentTarget","toLowerCase","includes","elem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,oBAAoB,MAAQ,sB,mBCA9GD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,gCAAgC,OAAS,8B,iBCAzGD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kLCIzC,SAASC,EAAT,GAAkC,IAAlBC,EAAiB,EAAjBA,cAC7B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAaC,cACbC,EAAeD,cAIfE,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,WACHT,EAAQU,GACR,MAEF,IAAK,aACHR,EAAUQ,GACV,MAEF,QACE,SAiBCC,EAAQ,WACbX,EAAQ,IACRE,EAAU,KAGZ,OACE,8BACE,uBAAMU,UAAWC,IAAEC,KAAMC,SApBR,SAACR,GACpBA,EAAMS,iBAQNnB,EAAcE,EAAUE,GACxBU,KAUE,UACE,uBAAOC,UAAWC,IAAEI,MAAOC,QAASf,EAApC,kBAGA,uBACES,UAAWC,IAAEM,MACbC,GAAIjB,EACJkB,KAAK,OACLZ,KAAK,WACLC,MAAOX,EACPuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUnB,IAGZ,uBAAOM,UAAWC,IAAEI,MAAOC,QAASb,EAApC,oBAGA,uBACEO,UAAWC,IAAEM,MACbC,GAAIf,EACJgB,KAAK,MACLZ,KAAK,aACLC,MAAOT,EACPqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUnB,IAGZ,wBAAQM,UAAWC,IAAEa,OAAQL,KAAK,SAAlC,8B,oBC9EO,SAASM,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,SAEjD,OACE,oBAAIjB,UAAWC,IAAEiB,KAAjB,SACGD,EAASE,KAAI,gBAAGX,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMuB,EAAb,EAAaA,OAAb,OACZ,qBAAIpB,UAAWC,IAAEoB,WAAjB,UACGxB,EADH,MACYuB,EACV,wBACEpB,UAAWC,IAAEa,OACbQ,QAASN,EACTP,KAAK,SACLD,GAAIA,EAJN,sBAFgCA,Q,oBCL7B,SAASe,EAAT,GAA0C,IAAxBzB,EAAuB,EAAvBA,MAAO0B,EAAgB,EAAhBA,aACtC,OACE,qCACE,uBAAOxB,UAAWC,IAAEI,MAApB,mCACA,uBACEL,UAAWC,IAAEM,MACbE,KAAK,OACLX,MAAOA,EACPe,SAAUW,OCsDHC,MA1Df,WACE,MAAgCvC,oBAAS,WAAO,IAAD,EAC7C,iBAAOwC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuD,MADzD,mBAAOZ,EAAP,KAAiBa,EAAjB,KAIA,EAA4B5C,mBAAS,IAArC,mBAAO6C,EAAP,KAAeC,EAAf,KA0CA,OAxCAC,qBAAU,WACRC,OAAON,aAAaO,QAAQ,WAAYT,KAAKU,UAAUnB,MACtD,CAACA,IAuCF,sBAAKjB,UAAU,MAAf,UACE,2CACA,cAAChB,EAAD,CAAMC,cA9BY,SAACY,EAAMuB,GAC3B,IAAMiB,EAAc,CAClBxC,OACAuB,SACAZ,GAAIhB,eAEDyB,EAASqB,MAAK,SAACC,GAAD,OAAaA,EAAQ1C,OAASA,KAG/C2C,MAAM,GAAD,OAAI3C,EAAJ,4BAFLiC,GAAY,SAACW,GAAD,OAAmBJ,GAAnB,mBAAmCI,UAwB/C,0CACA,cAAClB,EAAD,CAAQzB,MAAOiC,EAAQP,aAnBN,SAACkB,GACpBV,EAAUU,EAAEC,cAAc7C,UAmBxB,cAACiB,EAAD,CAAaE,SAfRA,EAASc,QAAO,SAACQ,GAAD,OACrBA,EAAQ1C,KAAK+C,cAAcC,SAASd,EAAOa,kBAcF5B,cAVvB,SAACR,GACrBsB,EAAYb,EAASc,QAAO,SAACe,GAAD,OAAUA,EAAKtC,KAAOA,aCvCvCuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ceafaab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__21ecz\",\"button\":\"Form_button__18pVM\",\"label\":\"Form_label__1HCQ5\",\"input\":\"Form_input__2N_dk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2nvHj\",\"list__item\":\"ContactList_list__item__3NpL2\",\"button\":\"ContactList_button__Kv4GT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3A8hE\",\"input\":\"Filter_input__1JuE7\"};","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"../Forms/Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Form({ addNewContact }) {\r\n  const [userName, setName] = useState(\"\");\r\n  const [userNumber, setNumber] = useState(\"\");\r\n  const prodIdName = uuidv4();\r\n  const prodIdNumber = uuidv4();\r\n\r\n  //console.log(setName);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"userName\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"userNumber\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    //const { name, number } = this.state;\r\n\r\n    // let obj = {\r\n    //   userName,\r\n    //   userNumber,\r\n    // };\r\n\r\n    addNewContact(userName, userNumber);\r\n    reset();\r\n  };\r\n\r\n   const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={prodIdName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdName}\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={prodIdNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdNumber}\r\n          type=\"tel\"\r\n          name=\"userNumber\"\r\n          value={userNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  addNewContact: PropTypes.func,\r\n};\r\n","import s from \"../Contacts/ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList ({removeContact, contacts}) {\r\n \r\n    return (\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.list__item} key={id}>\r\n            {name} : {number}\r\n            <button\r\n              className={s.button}\r\n              onClick={removeContact}\r\n              type=\"button\"\r\n              id={id}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  removeContact: PropTypes.func,\r\n};\r\n","import s from \"../Filter/Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, changeFilter }) {\r\n  return (\r\n    <>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={changeFilter}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.array,\r\n  changeFilter: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Forms/Form\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  const [filter, setFilter] = useState([]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  // state = {\n  //   contacts: [\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n\n  const addNewContact = (name, number) => {\n    const newContacts = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    if (!contacts.find((contact) => contact.name === name)) {\n      setContacts((prevContacts) => [newContacts, ...prevContacts]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const renderContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const removeContact = (id) => {\n    setContacts(contacts.filter((elem) => elem.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form addNewContact={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} changeFilter={changeFilter} />\n      <ContactList contacts={renderContacts()} removeContact={removeContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}